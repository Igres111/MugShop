@using MugShop.ViewModels
@model MugPageViewModel

<div id="burger-menu" class="position-fixed top-0 end-0 p-3" style="z-index:1000;">
    <button onclick="toggleMenu()" class="btn btn-dark">☰ Categories</button>
    <div id="menu-content" class="mt-2 bg-white border p-2" style="display:none;">
        @foreach (var category in Model.Categories)
        {
            <p class="mb-1">@category.Name</p>
        }
    </div>
</div>

<h1 class="mb-4 text-center">Mugs</h1>

<form method="get" class="row g-3 align-items-end justify-content-center mb-4">
    <div class="col-auto">
        <label class="form-label">Color</label>
        <select name="color" class="form-select">
            <option value="">All</option>
            @foreach (var c in Model.AvailableColors)
            {
                <option value="@c"
                        selected="@(c == Model.SelectedColor ? "selected" : null)">
                    @c
                </option>
            }
        </select>
    </div>

    <div class="col-auto">
        <label class="form-label">Min Price</label>
        <input type="number"
               name="minPrice"
               step="0.01"
               class="form-control"
               placeholder="0.00"
               value="@(Model.MinPrice?.ToString() ?? "")" />
    </div>

    <div class="col-auto">
        <label class="form-label">Max Price</label>
        <input type="number"
               name="maxPrice"
               step="0.01"
               class="form-control"
               placeholder="0.00"
               value="@(Model.MaxPrice?.ToString() ?? "")" />
    </div>

    <div class="col-auto">
  <label class="form-label">Sort by</label>
  <select name="sortBy" class="form-select">
            @if (Model.SortBy == "price-asc")
            {
                <option value="price-asc" selected>Price: Low to High</option>
            }
            else
            {
                <option value="price-asc">Price: Low to High</option>
            }

            @if (Model.SortBy == "price-desc")
            {
                <option value="price-desc" selected>Price: High to Low</option>
            }
            else
            {
                <option value="price-desc">Price: High to Low</option>
            }

            @if (Model.SortBy == "name-asc")
            {
                <option value="name-asc" selected>Name: A to Z</option>
            }
            else
            {
                <option value="name-asc">Name: A to Z</option>
            }

            @if (Model.SortBy == "name-desc")
            {
                <option value="name-desc" selected>Name: Z to A</option>
            }
            else
            {
                <option value="name-desc">Name: Z to A</option>
            }

            @if (Model.SortBy == "newest")
            {
                <option value="newest" selected>Newest</option>
            }
            else
            {
                <option value="newest">Newest</option>
            }
  </select>
</div>

    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Filter</button>
        <a asp-action="Index"
           asp-controller="Mugs"
           class="btn btn-link ms-2">
            Clear
        </a>
    </div>
</form>

<div class="d-flex gap-3">
    <div class="flex-fill">
        <p><strong>SKU</strong></p>
        @foreach (var mug in Model.Mugs)
        {
            <p>@mug.SKU</p>
        }
    </div>

    <div class="flex-fill">
        <p><strong>Name</strong></p>
        @foreach (var mug in Model.Mugs)
        {
            <p>@mug.Name</p>
        }
    </div>

    <div class="flex-fill">
        <p><strong>Color</strong></p>
        @foreach (var mug in Model.Mugs)
        {
            <p>@mug.Color</p>
        }
    </div>

    <div class="flex-fill">
        <p><strong>Price</strong></p>
        @foreach (var mug in Model.Mugs)
        {
            <p>@mug.Price.ToString("C")</p>
        }
    </div>

    <div class="flex-fill">
        <p><strong>In Stock?</strong></p>
        @foreach (var mug in Model.Mugs)
        {
            <p>@(mug.InStock ? "Yes" : "No")</p>
        }
    </div>
    <div class="flex-fill">
        <p><strong>More Info </strong></p>
        @foreach (var mug in Model.Mugs)
        {
            <p class="d-flex align-items-center">
                <button type="button"
                        class="btn btn-outline-primary btn-sm ms-2"
                        style="width:1.5rem; height:1.5rem; padding:0.125rem; font-size:0.75rem; line-height:1;"
                        data-bs-toggle="modal"
                        data-bs-target="#mugModal@(mug.Id)">
                    i
                </button>
            </p>
        }
    </div>
    @foreach (var mug in Model.Mugs)
    {
        <div class="modal fade"
             id="mugModal@(mug.Id)"
             tabindex="-1"
             aria-labelledby="mugModalLabel@(mug.Id)"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <h5 class="modal-title" id="mugModalLabel@mug.Id">
                            @mug.Name Details
                        </h5>
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>

                    <div class="modal-body">
                        <dl class="row">
                            <dt class="col-sm-4">SKU</dt>
                            <dd class="col-sm-8">@mug.SKU</dd>

                            <dt class="col-sm-4">Name</dt>
                            <dd class="col-sm-8">@mug.Name</dd>

                            <dt class="col-sm-4">Description</dt>
                            <dd class="col-sm-8">@mug.Description</dd>

                            <dt class="col-sm-4">Color</dt>
                            <dd class="col-sm-8">@mug.Color</dd>

                            <dt class="col-sm-4">Price</dt>
                            <dd class="col-sm-8">@mug.Price.ToString("C")</dd>

                            <dt class="col-sm-4">In Stock?</dt>
                            <dd class="col-sm-8">@(mug.InStock ? "Yes" : "No")</dd>

                            <dt class="col-sm-4">Category ID</dt>
                            <dd class="col-sm-8">@mug.CategoryId</dd>
                        </dl>
                    </div>

                </div>
            </div>
        </div>
    }

</div>
<nav aria-label="Page navigation" class="mt-4">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link"
               asp-action="Index"
               asp-route-pageNumber="@(Model.PageNumber - 1)"
               asp-route-pageSize="@Model.PageSize"
               asp-route-color="@Model.SelectedColor"
               asp-route-minPrice="@Model.MinPrice"
               asp-route-maxPrice="@Model.MaxPrice">
                Previous
            </a>
        </li>

        @for (int p = 1; p <= Model.TotalPages; p++)
        {
            <li class="page-item @(p == Model.PageNumber ? "active" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-pageNumber="@p"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-color="@Model.SelectedColor"
                   asp-route-minPrice="@Model.MinPrice"
                   asp-route-maxPrice="@Model.MaxPrice">
                    @p
                </a>
            </li>
        }

        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link"
               asp-action="Index"
               asp-route-pageNumber="@(Model.PageNumber + 1)"
               asp-route-pageSize="@Model.PageSize"
               asp-route-color="@Model.SelectedColor"
               asp-route-minPrice="@Model.MinPrice"
               asp-route-maxPrice="@Model.MaxPrice">
                Next
            </a>
        </li>
    </ul>
</nav>


<script src="~/js/burgerMenu.js"></script>
